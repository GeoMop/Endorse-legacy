#################
# Test goal: Test of boundary field interpolation
# Author: Jan Stebel
# Source for reference: qualitative

flow123d_version: 3.1.0
problem: !Coupling_Sequential
  description: |
      Transport problem with Darcy flow driven by the boundary condition from the larger model.
      Source term is prescribed on a part of the borehole boundary given by the index of container position.
  mesh:
    mesh_file: <mesh_file>
  flow_equation: !Flow_Darcy_MH
    output_specific:
    nonlinear_solver:
      linear_solver: !Petsc
        a_tol: <flow_solver__a_tol>
        r_tol: <flow_solver__r_tol>
        options: <flow_solver__options>
    input_fields:
      - region: [.box_outer, .fr_outer]
        bc_type: dirichlet
        bc_piezo_head: !FieldFE
          mesh_data_file: large_model.msh
          field_name: piezo_head_p0
          interpolation: P0_intersection
      - region: [box, EDZ_2D, fractures]
        conductivity:  !FieldFE
          mesh_data_file: input_fields.msh
          field_name: conductivity
          #interpolation: P0_intersection
        cross_section:  !FieldFE
          mesh_data_file: input_fields.msh
          field_name: cross_section
          #interpolation: P0_intersection
    n_schurs: 2
    output:
      fields:
        - piezo_head_p0
        #- pressure_p0
        #- pressure_p1
        - velocity_p0
        - region_id
        - conductivity
    balance: {}
    output_stream:      
      format: !vtk
        variant: ascii

  solute_equation: !Coupling_OperatorSplitting
    substances:
        - name: U235 # uranium 235
          molar_mass: 0.235
    transport: !Solute_AdvectionDiffusion_DG
      user_fields:
        - name: bc_flux_x
          is_boundary: true
          scalar_field: !FieldFormula
            value: if((y > <source_y0>)and(y < <source_y1>)and(x > <source_x0>)and(x < <source_x1>),1.0,0) #if((y>-1129275)and(y<-1129250)and(x>-682460)and(x<-682450),1,0)
        - name: bc_flux_t
          is_boundary: true
          scalar_field: !FieldTimeFunction
            time_function: 
              values: !include_csv
                file: conc_flux_UOS.csv
                separator: " "
                n_head_lines: 1
                format:
                  t:
                    time: $0
                  value: $1
      input_fields:
        - region: box
          porosity: 0.01
        - region: EDZ_2D
          porosity: 0.01
        - region: fractures
          porosity: 1
        - region: [.box_inner, .fr_inner]
          bc_type: total_flux
          bc_flux: !FieldFormula
            value: bc_flux_x * bc_flux_t
        
      solver:
        a_tol: <trans_solver__a_tol>
        r_tol: <trans_solver__r_tol>
        options: <trans_solver__options>
      output:    
        fields:
        - field: conc
          interpolation: [P0_value, D1_value] #[P0_value, P1_average, D1_value]
    output_stream:
      format: !vtk
        variant: ascii
      times:
        - step: 6.3072e7   
    time:
      end_time: 1e9
      time_step: 1e7
    balance:
      cumulative: true
